import unittest
from Engine import Engine

import unittest
from engine import Engine
from limit_order import LimitOrder

class EngineTest(unittest.TestCase):
    def setUp(self):
        self.engine = Engine(max_counterparties=5)

    def test_post_non_crossing_limit_orders(self):
        order1_str = '{"user": "testuser1", "is_bid": true, "limit_price": 100, "amount": 10, "order_expiry": "1679155437"'
        order2_str = '{"user": "testuser2", "is_bid": false, "limit_price": 200, "amount": 5, "order_expiry": "1679155437"'
        
        # Add the orders to the Redis set
        self.engine.post_limit_order(order1_str)
        self.engine.post_limit_order(order2_str)

        # Check that the orders were added correctly
        order1_from_redis = self.engine.r.get(order1.order_id)
        order2_from_redis = self.engine.r.get(order2.order_id)
        self.assertEqual(order1.json, json.loads(order1_from_redis))
        self.assertEqual(order2.json, json.loads(order2_from_redis))

if __name__ == '__main__':
    unittest.main()